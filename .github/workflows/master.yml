
name: Push to master
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions/checkout@v3

      - name: Hello
        run: echo "Hello, world!"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Docker meta
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: microservices-demo-frontned

      # - name: Build and push
      #   id: docker_build
      #   if: github.event_name != 'pull_request'
      #   uses: docker/build-push-action@v2
      #   with:
      #     push: true
      #     tags:  ${{ steps.meta.outputs.tags }}


        - name: Build, tag, and push image to Amazon ECR
          if: github.event_name != 'pull_request'
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: microservices-demo-frontned
            IMAGE_TAG: microservices-demo-frontned
          run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG